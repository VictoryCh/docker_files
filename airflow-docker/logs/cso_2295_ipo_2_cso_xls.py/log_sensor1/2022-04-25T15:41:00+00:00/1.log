[2022-04-26 15:41:23,539] {taskinstance.py:1037} INFO - Dependencies all met for <TaskInstance: cso_2295_ipo_2_cso_xls.py.log_sensor1 scheduled__2022-04-25T15:41:00+00:00 [queued]>
[2022-04-26 15:41:23,550] {taskinstance.py:1037} INFO - Dependencies all met for <TaskInstance: cso_2295_ipo_2_cso_xls.py.log_sensor1 scheduled__2022-04-25T15:41:00+00:00 [queued]>
[2022-04-26 15:41:23,550] {taskinstance.py:1243} INFO - 
--------------------------------------------------------------------------------
[2022-04-26 15:41:23,550] {taskinstance.py:1244} INFO - Starting attempt 1 of 1
[2022-04-26 15:41:23,550] {taskinstance.py:1245} INFO - 
--------------------------------------------------------------------------------
[2022-04-26 15:41:23,577] {taskinstance.py:1264} INFO - Executing <Task(SqlSensor): log_sensor1> on 2022-04-25 15:41:00+00:00
[2022-04-26 15:41:23,584] {standard_task_runner.py:52} INFO - Started process 1075 to run task
[2022-04-26 15:41:23,590] {standard_task_runner.py:76} INFO - Running: ['***', 'tasks', 'run', 'cso_2295_ipo_2_cso_xls.py', 'log_sensor1', 'scheduled__2022-04-25T15:41:00+00:00', '--job-id', '1272', '--raw', '--subdir', 'DAGS_FOLDER/cso_2295/cso_2295_ipo_2_cso_xls.py', '--cfg-path', '/tmp/tmpfw3wmom6', '--error-file', '/tmp/tmpi2d5y_w3']
[2022-04-26 15:41:23,591] {standard_task_runner.py:77} INFO - Job 1272: Subtask log_sensor1
[2022-04-26 15:41:23,725] {logging_mixin.py:109} INFO - Running <TaskInstance: cso_2295_ipo_2_cso_xls.py.log_sensor1 scheduled__2022-04-25T15:41:00+00:00 [running]> on host db7736b5b8d2
[2022-04-26 15:41:24,794] {taskinstance.py:1431} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=cso_2295_ipo_2_cso_xls.py
AIRFLOW_CTX_TASK_ID=log_sensor1
AIRFLOW_CTX_EXECUTION_DATE=2022-04-25T15:41:00+00:00
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2022-04-25T15:41:00+00:00
[2022-04-26 15:41:24,838] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:41:27,799] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:41:27,811] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:42:28,004] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:42:28,077] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:42:28,092] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:43:28,161] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:43:28,203] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:43:28,209] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:44:28,285] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:44:28,353] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:44:28,360] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:45:28,429] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:45:34,320] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:45:34,335] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:46:34,523] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:46:34,607] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:46:34,612] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:47:34,708] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:47:34,809] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:47:34,833] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:48:34,906] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:48:34,957] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:48:34,965] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:49:35,045] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:49:35,116] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:49:35,129] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:50:35,198] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:50:35,264] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:50:35,275] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:51:35,348] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:51:35,406] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:51:35,414] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:52:35,485] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:52:35,590] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:52:35,600] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:53:35,672] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:53:35,729] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:53:35,738] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:54:35,806] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:54:35,850] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:54:35,857] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:55:35,933] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:55:35,988] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:55:36,000] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:56:36,077] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:56:36,120] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:56:36,133] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:57:36,205] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:57:36,254] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:57:36,262] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:58:36,351] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:58:36,460] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:58:36,465] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:59:36,533] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 15:59:36,574] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 15:59:36,579] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:00:36,648] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:00:36,689] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:00:36,694] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:01:36,776] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:01:36,903] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:01:36,909] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:02:36,990] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:02:37,115] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:02:37,121] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:03:37,189] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:03:37,232] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:03:37,237] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:04:37,307] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:04:37,350] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:04:37,357] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:05:37,425] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:05:37,474] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:05:37,481] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:06:37,565] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:06:37,677] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:06:37,688] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:07:37,757] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:07:37,820] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:07:37,828] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:08:37,919] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:08:38,058] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:08:38,064] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:09:38,144] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:09:38,329] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:09:38,338] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:10:38,417] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:10:38,480] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:10:38,485] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:11:38,555] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:11:38,606] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:11:38,619] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:12:38,710] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:12:38,827] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:12:38,832] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:13:38,903] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:13:39,035] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:13:39,070] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:14:39,144] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:14:39,198] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:14:39,209] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:15:39,293] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:15:39,406] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:15:39,417] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:16:39,523] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:16:39,616] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:16:39,623] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:17:39,693] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:17:39,746] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:17:39,751] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:18:39,844] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:18:39,913] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:18:39,920] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:19:39,993] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:19:40,060] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:19:40,065] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:20:40,137] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:20:40,212] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:20:40,218] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:21:40,311] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:21:40,412] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:21:40,421] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:22:40,508] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:22:40,610] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:22:40,616] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:23:40,697] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:23:40,753] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:23:40,758] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:24:40,842] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:24:40,946] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:24:40,952] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:25:41,039] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:25:41,124] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:25:41,135] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:26:41,204] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:26:41,243] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:26:41,248] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:27:41,330] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:27:41,378] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:27:41,391] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:28:41,468] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:28:41,505] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:28:41,509] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:29:41,576] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:29:41,615] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:29:41,620] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:30:41,699] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:30:41,752] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:30:41,757] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:31:41,838] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:31:41,906] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:31:41,910] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:32:41,991] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:32:42,055] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:32:42,059] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:33:42,125] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:33:42,165] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:33:42,173] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:34:42,256] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:34:42,331] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:34:42,372] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:35:42,458] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:35:42,522] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:35:42,528] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:36:42,598] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:36:42,638] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:36:42,645] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:37:42,727] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:37:42,788] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:37:42,793] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:38:42,888] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:38:42,966] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:38:42,971] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:39:43,040] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:39:43,090] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:39:43,096] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:40:43,182] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:40:43,256] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:40:43,262] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:41:43,358] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:41:43,399] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:41:43,404] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:42:43,498] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:42:43,578] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:42:43,583] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:43:43,673] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:43:43,735] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:43:43,740] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:44:43,822] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:44:43,890] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:44:43,895] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:45:43,973] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:45:44,025] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:45:44,032] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:46:44,110] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:46:44,174] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:46:44,180] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:47:44,248] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:47:44,287] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:47:44,293] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:48:44,375] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:48:44,445] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:48:44,450] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:49:44,517] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:49:44,559] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:49:44,564] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:50:44,649] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:50:44,712] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:50:44,717] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:51:44,799] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:51:44,883] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:51:44,889] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:52:44,967] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:52:45,008] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:52:45,013] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:53:45,094] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:53:45,159] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:53:45,164] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:54:45,233] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:54:45,274] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:54:45,279] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:55:45,362] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:55:45,427] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:55:45,432] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:56:45,500] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:56:45,566] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:56:45,577] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:57:45,659] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:57:45,705] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:57:45,710] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:58:45,790] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:58:45,853] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:58:45,858] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:59:45,924] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 16:59:45,962] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 16:59:45,967] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:00:46,034] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:00:46,083] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:00:46,090] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:01:46,165] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:01:46,205] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:01:46,212] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:02:46,294] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:02:46,360] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:02:46,365] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:03:46,432] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:03:46,471] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:03:46,476] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:04:46,545] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:04:46,631] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:04:46,637] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:05:46,718] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:05:46,822] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:05:46,828] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:06:46,893] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:06:46,932] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:06:46,936] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:07:47,021] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:07:47,084] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:07:47,089] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:08:47,157] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:08:47,196] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:08:47,201] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:09:47,280] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:09:47,350] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:09:47,355] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:10:47,438] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:10:47,497] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:10:47,502] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:11:47,575] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:11:47,614] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:11:47,619] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:12:47,704] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:12:47,748] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:12:47,753] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:13:47,821] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:13:47,892] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:13:47,900] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:14:47,980] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:14:48,027] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:14:48,039] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:15:48,120] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:15:48,179] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:15:48,184] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:16:48,253] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:16:48,321] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:16:48,325] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:17:48,400] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:17:48,484] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:17:48,490] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:18:48,568] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:18:48,610] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:18:48,615] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:19:48,681] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:19:48,722] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:19:48,727] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:20:48,807] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:20:48,845] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:20:48,850] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:21:48,919] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:21:48,959] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:21:48,965] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:22:49,046] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:22:49,150] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:22:49,154] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:23:49,221] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:23:49,261] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:23:49,267] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:24:49,337] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:24:49,389] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:24:49,402] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:25:49,469] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:25:49,513] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:25:49,519] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:26:49,591] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:26:49,656] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:26:49,663] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:27:49,731] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:27:49,773] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:27:49,778] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:28:49,845] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:28:49,894] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:28:49,899] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:29:49,991] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:29:50,047] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:29:50,053] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:30:50,128] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:30:50,177] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:30:50,182] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:31:50,257] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:31:50,296] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:31:50,301] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:32:50,369] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:32:50,409] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:32:50,414] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:33:50,486] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:33:50,556] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:33:50,572] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:34:50,645] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:34:50,685] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:34:50,690] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:35:50,758] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:35:50,796] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:35:50,801] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:36:50,869] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:36:50,914] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:36:50,923] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:37:50,995] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:37:51,036] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:37:51,041] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:38:51,109] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:38:51,148] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:38:51,156] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:39:51,224] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:39:51,262] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:39:51,267] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:40:51,334] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:40:51,375] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:40:51,380] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:41:51,449] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:41:51,491] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:41:51,496] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:42:51,566] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:42:51,603] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:42:51,608] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:43:51,677] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:43:51,715] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:43:51,720] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:44:51,794] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:44:51,896] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:44:51,918] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:45:52,039] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:45:52,088] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:45:52,115] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:46:52,208] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:46:52,256] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:46:52,262] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:47:52,328] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:47:52,366] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:47:52,385] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:48:52,457] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:48:52,496] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:48:52,501] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:49:52,570] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:49:52,623] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:49:52,638] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:50:52,728] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:50:52,833] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:50:52,855] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:51:52,924] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:51:52,961] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:51:52,966] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:52:53,039] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:52:53,084] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:52:53,088] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:53:53,167] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:53:53,290] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:53:53,296] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:54:53,371] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:54:53,429] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:54:53,443] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:55:53,526] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:55:53,592] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:55:53,597] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:56:53,665] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:56:53,702] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:56:53,707] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:57:53,773] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:57:53,813] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:57:53,818] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:58:53,886] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:58:53,942] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:58:53,948] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:59:54,028] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 17:59:54,077] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 17:59:54,082] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:00:54,165] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:00:54,228] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:00:54,233] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:01:54,304] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:01:54,353] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:01:54,358] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:02:54,424] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:02:54,463] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:02:54,468] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:03:54,549] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:03:54,619] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:03:54,624] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:04:54,752] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:04:54,944] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:04:54,961] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:05:55,068] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:05:55,136] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:05:55,141] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:06:55,224] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:06:55,334] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:06:55,339] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:07:55,420] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:07:55,485] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:07:55,490] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:08:55,573] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:08:55,635] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:08:55,640] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:09:55,704] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:09:55,743] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:09:55,761] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:10:55,844] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:10:55,903] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:10:55,908] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:11:55,986] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:11:56,034] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:11:56,039] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:12:56,105] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:12:56,146] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:12:56,151] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:13:56,235] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:13:56,301] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:13:56,307] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:14:56,390] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:14:56,448] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:14:56,456] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:15:56,543] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:15:56,594] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:15:56,600] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:16:56,668] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:16:56,719] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:16:56,730] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:17:56,815] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:17:56,882] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:17:56,889] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:18:56,970] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:18:57,044] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:18:57,051] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:19:57,136] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:19:57,180] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:19:57,188] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:20:57,265] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:20:57,330] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:20:57,335] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:21:57,413] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:21:57,479] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:21:57,484] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:22:57,566] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:22:57,637] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:22:57,642] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:23:57,742] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:23:57,811] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:23:57,816] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:24:57,885] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:24:57,926] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:24:57,931] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:25:58,010] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:25:58,080] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:25:58,085] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:26:58,153] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:26:58,196] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:26:58,204] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:27:58,286] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:27:58,352] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:27:58,357] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:28:58,425] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:28:58,464] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:28:58,469] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:29:58,550] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:29:58,617] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:29:58,622] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:30:58,690] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:30:58,733] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:30:58,738] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:31:58,809] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:31:58,849] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:31:58,855] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:32:58,934] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:32:59,003] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:32:59,007] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:33:59,078] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:33:59,144] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:33:59,157] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:34:59,238] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:34:59,316] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:34:59,321] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:35:59,402] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:35:59,464] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:35:59,470] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:36:59,552] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:36:59,617] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:36:59,624] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:37:59,710] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:37:59,806] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:37:59,812] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:38:59,881] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:38:59,922] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:38:59,927] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:39:59,996] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:40:00,035] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:40:00,039] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:41:00,109] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:41:00,166] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:41:00,184] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:42:00,256] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:42:00,294] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:42:00,299] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:43:00,378] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:43:00,438] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:43:00,443] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:44:00,509] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:44:00,546] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:44:00,551] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:45:00,642] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:45:00,726] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:45:00,741] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:46:00,808] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:46:00,852] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:46:00,856] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:47:00,924] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:47:00,965] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:47:00,970] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:48:01,036] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:48:01,076] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:48:01,080] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:49:01,150] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:49:01,197] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:49:01,204] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:50:01,287] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:50:01,336] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:50:01,340] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:51:01,426] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:51:01,503] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:51:01,509] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:52:01,595] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:52:01,658] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:52:01,665] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:53:01,746] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:53:01,809] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:53:01,815] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:54:01,908] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:54:01,964] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:54:01,976] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:55:02,056] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:55:02,126] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:55:02,131] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:56:02,196] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:56:02,235] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:56:02,241] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:57:02,334] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:57:02,427] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:57:02,432] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:58:02,500] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:58:02,538] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:58:02,542] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:59:02,622] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 18:59:02,683] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 18:59:02,689] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:00:02,770] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:00:02,833] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:00:02,838] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:01:02,915] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:01:02,984] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:01:02,993] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:02:03,070] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:02:03,134] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:02:03,147] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:03:03,238] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:03:03,313] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:03:03,319] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:04:03,401] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:04:03,468] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:04:03,472] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:05:03,541] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:05:03,588] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:05:03,594] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:06:03,660] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:06:03,701] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:06:03,710] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:07:03,790] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:07:03,859] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:07:03,864] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:08:03,942] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:08:04,009] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:08:04,014] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:09:04,080] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:09:04,121] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:09:04,126] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:10:04,206] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:10:04,272] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:10:04,277] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:11:04,358] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:11:04,424] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:11:04,429] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:12:04,520] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:12:04,683] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:12:04,691] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:13:04,770] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:13:04,829] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:13:04,834] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:14:04,916] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:14:04,979] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:14:04,984] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:15:05,049] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:15:05,091] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:15:05,097] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:16:05,178] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:16:05,234] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:16:05,239] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:17:05,322] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:17:05,391] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:17:05,404] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:18:05,486] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:18:05,549] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:18:05,559] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:19:05,641] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:19:05,695] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:19:05,705] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:20:05,776] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:20:05,818] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:20:05,823] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:21:05,888] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:21:05,930] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:21:05,935] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:22:06,000] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:22:06,039] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:22:06,044] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:23:06,124] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:23:06,184] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:23:06,189] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:24:06,276] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:24:06,332] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:24:06,337] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:25:06,418] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:25:06,484] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:25:06,491] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:26:06,561] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:26:06,608] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:26:06,613] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:27:06,695] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:27:06,750] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:27:06,754] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:28:06,826] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:28:06,870] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:28:06,875] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:29:06,959] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:29:07,022] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:29:07,027] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:30:07,107] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:30:07,171] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:30:07,176] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:31:07,256] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:31:07,319] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:31:07,324] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:32:07,407] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:32:07,476] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:32:07,484] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:33:07,549] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:33:07,591] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:33:07,599] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:34:07,683] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:34:07,738] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:34:07,744] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:35:07,830] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:35:07,877] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:35:07,892] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:36:07,994] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:36:08,063] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:36:08,069] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:37:08,136] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:37:08,174] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:37:08,179] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:38:08,261] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:38:08,329] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:38:08,335] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:39:08,417] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:39:08,468] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:39:08,473] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:40:08,546] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:40:08,607] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:40:08,612] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:41:08,684] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:41:08,723] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:41:08,729] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:42:08,810] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:42:08,871] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:42:08,877] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:43:08,961] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:43:09,005] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:43:09,011] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:44:09,093] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:44:09,143] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:44:09,147] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:45:09,226] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:45:09,295] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:45:09,304] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:46:09,398] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:46:09,449] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:46:09,454] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:47:09,522] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:47:09,563] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:47:09,570] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:48:09,637] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:48:09,679] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:48:09,685] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:49:09,755] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:49:09,850] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:49:09,863] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:50:09,932] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:50:09,971] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:50:09,976] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:51:10,058] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:51:10,129] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:51:10,134] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:52:10,215] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:52:10,260] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:52:10,267] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:53:10,345] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:53:10,392] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:53:10,397] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:54:10,465] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:54:10,513] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:54:10,518] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:55:10,585] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:55:10,625] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:55:10,636] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:56:10,708] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:56:10,753] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:56:10,758] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:57:10,828] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:57:10,869] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:57:10,876] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:58:10,958] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:58:11,021] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:58:11,026] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:59:11,108] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 19:59:11,173] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 19:59:11,179] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:00:11,245] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:00:11,283] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:00:11,288] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:01:11,357] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:01:11,413] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:01:11,430] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:02:11,500] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:02:11,539] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:02:11,544] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:03:11,609] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:03:11,649] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:03:11,653] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:04:11,720] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:04:11,762] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:04:11,767] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:05:11,850] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:05:11,906] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:05:11,912] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:06:11,985] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:06:12,026] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:06:12,031] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:07:12,110] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:07:12,175] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:07:12,180] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:08:12,251] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:08:12,325] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:08:12,343] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:09:12,418] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:09:12,464] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:09:12,469] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:10:12,536] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:10:12,574] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:10:12,579] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:11:12,660] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:11:12,704] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:11:12,713] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:12:12,789] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:12:12,832] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:12:12,838] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:13:12,905] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:13:12,969] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:13:12,995] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:14:13,065] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:14:13,117] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:14:13,121] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:15:13,190] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:15:13,281] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:15:13,298] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:16:13,378] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:16:13,451] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:16:13,456] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:17:13,526] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:17:13,590] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:17:13,595] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:18:13,662] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:18:13,706] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:18:13,718] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:19:13,787] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:19:13,879] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:19:13,885] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:20:13,953] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:20:13,994] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:20:14,002] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:21:14,071] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:21:14,137] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:21:14,142] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:22:14,209] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:22:14,254] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:22:14,260] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:23:14,335] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:23:14,387] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:23:14,392] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:24:14,462] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:24:14,500] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:24:14,505] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:25:14,575] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:25:14,614] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:25:14,619] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:26:14,687] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:26:14,776] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:26:14,781] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:27:14,848] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:27:14,886] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-26 20:27:14,895] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-26 20:27:42,000] {base_job.py:231} ERROR - LocalTaskJob heartbeat got an exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/impl.py", line 241, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: connection to server at "postgres" (172.30.0.3), port 5432 failed: FATAL:  the database system is shutting down


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/jobs/base_job.py", line 203, in heartbeat
    session.merge(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2171, in merge
    _resolve_conflict_map=_resolve_conflict_map,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2244, in _merge
    merged = self.query(mapper.class_).get(key[1])
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 1018, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 1135, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/loading.py", line 286, in load_on_pk_identity
    return q.one()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3557, in _execute_and_instances
    querycontext, self._connection_from_session, close_with_result=True
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3572, in _get_bind_args
    mapper=self._bind_mapper(), clause=querycontext.statement, **kw
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1145, in connection
    execution_options=execution_options,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1151, in _connection_for_bind
    engine, execution_options
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2340, in _wrap_pool_connect
    e, dialect, self
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1584, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/impl.py", line 241, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "postgres" (172.30.0.3), port 5432 failed: FATAL:  the database system is shutting down

(Background on this error at: http://sqlalche.me/e/13/e3q8)
