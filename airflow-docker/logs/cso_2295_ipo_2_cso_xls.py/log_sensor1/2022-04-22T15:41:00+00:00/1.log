[2022-04-24 19:43:49,817] {taskinstance.py:1037} INFO - Dependencies all met for <TaskInstance: cso_2295_ipo_2_cso_xls.py.log_sensor1 scheduled__2022-04-22T15:41:00+00:00 [queued]>
[2022-04-24 19:43:49,847] {taskinstance.py:1037} INFO - Dependencies all met for <TaskInstance: cso_2295_ipo_2_cso_xls.py.log_sensor1 scheduled__2022-04-22T15:41:00+00:00 [queued]>
[2022-04-24 19:43:49,847] {taskinstance.py:1243} INFO - 
--------------------------------------------------------------------------------
[2022-04-24 19:43:49,847] {taskinstance.py:1244} INFO - Starting attempt 1 of 1
[2022-04-24 19:43:49,847] {taskinstance.py:1245} INFO - 
--------------------------------------------------------------------------------
[2022-04-24 19:43:49,922] {taskinstance.py:1264} INFO - Executing <Task(SqlSensor): log_sensor1> on 2022-04-22 15:41:00+00:00
[2022-04-24 19:43:49,933] {standard_task_runner.py:52} INFO - Started process 112 to run task
[2022-04-24 19:43:49,957] {standard_task_runner.py:76} INFO - Running: ['***', 'tasks', 'run', 'cso_2295_ipo_2_cso_xls.py', 'log_sensor1', 'scheduled__2022-04-22T15:41:00+00:00', '--job-id', '1067', '--raw', '--subdir', 'DAGS_FOLDER/cso_2295/cso_2295_ipo_2_cso_xls.py', '--cfg-path', '/tmp/tmpaixd37_v', '--error-file', '/tmp/tmpg60gm7dn']
[2022-04-24 19:43:49,960] {standard_task_runner.py:77} INFO - Job 1067: Subtask log_sensor1
[2022-04-24 19:43:50,390] {logging_mixin.py:109} INFO - Running <TaskInstance: cso_2295_ipo_2_cso_xls.py.log_sensor1 scheduled__2022-04-22T15:41:00+00:00 [running]> on host 22e04adb6bfa
[2022-04-24 19:43:51,476] {taskinstance.py:1431} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=cso_2295_ipo_2_cso_xls.py
AIRFLOW_CTX_TASK_ID=log_sensor1
AIRFLOW_CTX_EXECUTION_DATE=2022-04-22T15:41:00+00:00
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2022-04-22T15:41:00+00:00
[2022-04-24 19:43:51,485] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:43:54,819] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:43:54,855] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:44:54,943] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:44:55,044] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:44:55,050] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:45:55,121] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:45:55,169] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:45:55,176] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:46:55,249] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:46:55,290] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:46:55,297] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:47:55,369] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:47:55,446] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:47:55,453] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:48:55,523] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:48:55,567] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:48:55,586] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:49:55,665] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:49:55,736] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:49:55,746] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:50:55,814] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:50:55,854] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:50:55,859] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:51:55,927] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:51:55,980] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:51:55,985] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:52:56,066] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:52:56,122] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:52:56,129] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:53:56,197] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:53:56,236] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:53:56,243] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:54:56,310] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:54:56,349] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:54:56,356] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:55:56,439] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:55:56,693] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:55:56,708] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:56:56,797] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:56:56,854] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:56:56,861] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:57:56,932] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:57:56,976] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:57:56,981] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:58:57,058] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:58:57,114] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:58:57,146] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:59:57,251] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 19:59:57,292] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 19:59:57,296] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:00:57,367] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:00:57,434] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:00:57,439] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:01:57,512] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:01:57,579] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:01:57,593] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:02:57,658] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:02:57,738] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:02:57,745] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:03:57,819] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:03:57,960] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:03:57,966] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:04:58,038] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:04:58,111] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:04:58,133] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:05:58,210] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:05:58,298] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:05:58,304] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:06:58,379] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:06:58,488] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:06:58,495] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:07:58,569] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:07:58,616] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:07:58,621] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:08:58,687] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:08:58,740] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:08:58,744] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:09:58,815] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:09:58,854] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:09:58,860] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:10:58,931] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:10:58,974] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:10:58,979] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:11:59,069] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:11:59,249] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:11:59,272] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:12:59,347] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:12:59,391] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:12:59,396] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:13:59,464] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:13:59,504] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:13:59,509] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:14:59,598] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:14:59,665] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:14:59,675] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:15:59,761] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:15:59,813] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:15:59,832] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:16:59,913] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:16:59,965] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:16:59,972] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:18:00,037] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:18:00,075] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:18:00,080] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:19:00,146] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:19:00,185] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:19:00,190] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:20:00,266] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:20:00,312] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:20:00,317] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:21:00,389] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:21:01,109] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:21:01,118] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:22:01,216] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:22:04,479] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:22:04,487] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:23:04,611] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:23:04,680] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:23:04,685] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:24:04,760] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:24:04,888] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:24:04,896] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:25:04,965] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:25:05,032] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:25:05,041] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:26:05,114] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:26:07,709] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:26:07,720] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:27:07,825] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:27:07,993] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:27:08,002] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:28:08,085] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:28:08,288] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:28:08,303] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:29:08,391] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:29:08,433] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:29:08,438] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:30:08,508] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:30:08,634] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:30:08,644] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:31:08,715] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:31:08,758] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:31:08,768] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:32:08,839] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:32:08,982] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:32:09,000] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:33:09,071] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:33:09,117] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:33:09,123] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:34:09,192] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:34:09,259] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:34:09,268] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:35:09,361] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:35:09,436] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:35:09,443] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:36:09,527] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:36:09,609] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:36:09,615] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:37:09,725] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:37:09,800] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:37:09,810] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:38:09,919] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:38:10,032] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:38:10,038] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:39:10,110] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:39:10,158] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:39:10,167] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:40:10,245] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:40:10,293] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:40:10,299] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:41:10,385] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:41:10,510] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:41:10,522] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:42:10,606] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:42:10,653] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:42:10,658] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:43:10,725] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:43:10,765] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:43:10,770] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:44:10,851] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:44:10,901] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:44:10,916] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:45:10,985] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:45:11,044] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:45:11,050] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:46:11,117] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:46:11,176] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:46:11,194] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:47:11,261] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:47:11,304] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:47:11,310] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:48:11,377] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:48:11,443] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:48:11,448] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:49:11,529] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:49:11,587] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:49:11,613] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:50:11,704] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:50:11,814] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:50:11,841] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:51:11,917] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:51:12,024] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:51:12,038] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:52:12,115] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:52:12,156] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:52:12,164] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:53:12,230] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:53:12,271] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:53:12,279] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:54:12,348] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:54:12,412] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:54:12,433] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:55:12,518] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:55:12,562] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:55:12,571] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:56:12,640] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:56:12,682] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:56:12,688] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:57:12,761] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:57:12,803] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:57:12,808] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:58:12,873] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:58:12,915] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:58:12,920] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:59:12,991] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 20:59:13,036] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 20:59:13,041] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:00:13,109] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:00:13,193] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:00:13,199] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:01:13,273] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:01:13,323] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:01:13,328] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:02:13,407] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:02:13,452] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:02:13,458] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:03:13,538] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:03:13,624] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:03:13,630] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:04:13,805] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:04:13,973] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:04:13,982] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:05:14,062] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:05:14,219] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:05:14,255] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:06:14,345] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:06:14,389] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:06:14,395] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:07:14,480] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:07:14,534] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:07:14,539] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:08:14,606] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:08:14,647] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:08:14,651] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:09:14,727] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:09:14,784] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:09:14,789] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:10:14,875] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:10:14,953] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:10:14,958] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:11:15,031] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:11:15,123] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:11:15,130] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:12:15,199] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:12:15,359] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:12:15,372] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:13:15,449] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:13:15,549] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:13:15,555] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:14:15,624] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:14:15,666] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:14:15,671] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:15:15,738] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:15:15,791] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:15:15,796] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:16:15,865] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:16:15,916] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:16:15,922] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:17:15,989] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:17:16,034] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:17:16,040] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:18:16,112] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:18:16,185] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:18:16,199] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:19:16,275] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:19:16,356] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:19:16,362] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:20:16,438] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:20:16,562] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:20:16,572] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:21:16,646] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:21:16,743] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:21:16,761] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:22:16,849] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:22:17,081] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:22:17,103] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:23:17,225] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:23:17,305] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:23:17,317] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:24:17,390] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:24:17,489] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:24:17,506] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:25:17,575] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:25:17,661] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:25:17,673] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:26:17,741] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:26:17,789] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:26:17,798] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:27:17,873] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:27:17,988] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:27:17,993] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:28:18,072] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:28:18,126] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:28:18,144] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:29:18,220] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:29:18,278] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:29:18,289] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:30:18,358] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:30:18,424] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:30:18,429] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:31:18,506] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:31:18,563] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:31:18,575] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:32:18,661] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:32:18,747] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:32:18,767] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:33:18,834] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:33:18,934] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:33:18,946] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:34:19,032] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:34:19,296] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:34:19,310] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:35:19,393] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:35:19,507] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:35:19,526] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:36:19,595] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:36:19,639] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:36:19,650] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:37:19,720] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:37:19,802] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:37:19,816] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:38:19,886] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:38:19,924] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:38:19,929] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:39:20,000] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:39:20,041] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:39:20,046] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:40:20,127] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:40:20,186] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:40:20,191] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:41:20,257] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:41:20,297] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:41:20,301] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:42:20,369] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:42:20,408] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:42:20,413] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:43:20,510] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:43:20,570] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:43:20,602] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:44:20,674] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:44:20,718] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:44:20,723] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:45:20,822] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:45:20,893] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:45:20,901] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:46:20,982] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:46:21,103] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:46:21,109] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:47:21,192] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:47:21,330] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:47:21,339] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:48:21,413] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:48:21,464] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:48:21,470] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:49:21,539] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:49:21,579] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:49:21,584] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:50:21,660] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:50:21,727] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:50:21,734] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:51:21,823] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:51:21,918] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:51:21,923] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:52:21,989] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:52:22,032] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:52:22,037] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:53:22,105] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:53:22,153] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:53:22,162] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:54:22,245] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:54:22,303] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:54:22,309] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:55:22,391] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:55:22,453] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:55:22,458] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:56:22,540] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:56:22,602] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:56:22,610] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:57:22,677] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:57:22,718] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:57:22,724] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:58:22,792] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:58:22,843] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:58:22,851] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:59:22,935] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 21:59:23,015] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 21:59:23,022] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:00:23,098] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:00:23,143] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:00:23,151] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:01:23,236] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:01:23,368] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:01:23,373] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:02:23,459] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:02:23,517] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:02:23,524] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:03:23,620] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:03:23,747] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:03:23,764] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:04:23,848] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:04:23,898] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:04:23,908] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:05:24,043] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:05:24,132] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:05:24,151] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:06:24,223] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:06:24,271] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:06:24,276] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:07:24,346] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:07:24,442] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:07:24,447] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:08:24,534] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:08:24,665] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:08:24,692] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:09:24,777] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:09:24,889] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:09:24,894] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:10:24,963] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:10:25,062] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:10:25,074] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:11:25,156] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:11:25,199] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:11:25,205] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:12:25,275] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:12:25,348] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:12:25,363] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:13:25,452] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:13:25,612] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:13:25,632] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:14:25,701] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:14:25,740] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:14:25,746] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:15:25,815] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:15:25,860] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:15:25,867] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:16:25,948] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:16:26,011] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:16:26,016] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:17:26,081] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:17:26,121] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:17:26,127] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:18:26,193] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:18:26,237] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:18:26,241] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:19:26,309] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:19:26,349] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:19:26,354] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:20:26,422] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:20:26,462] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:20:26,467] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:21:26,562] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:21:26,697] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:21:26,708] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:22:26,801] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:22:26,928] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:22:26,942] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:23:27,015] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:23:27,106] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:23:27,112] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:24:27,211] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:24:27,290] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:24:27,302] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:25:27,375] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:25:27,468] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:25:27,479] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:26:27,551] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:26:27,609] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:26:27,618] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:27:27,692] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:27:27,738] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:27:27,743] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:28:27,812] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:28:27,876] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:28:27,883] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:29:27,957] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:29:28,020] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:29:28,026] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:30:28,096] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:30:28,171] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:30:28,178] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:31:28,245] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:31:28,287] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:31:28,295] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:32:28,373] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:32:28,414] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:32:28,424] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:33:28,492] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:33:28,532] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:33:28,537] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:34:28,606] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:34:28,647] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:34:28,652] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:35:28,720] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:35:28,763] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:35:28,768] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:36:28,833] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:36:28,875] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:36:28,880] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:37:28,955] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:37:29,040] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:37:29,046] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:38:29,113] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:38:29,152] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:38:29,157] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:39:29,226] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:39:29,264] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:39:29,269] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:40:29,340] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:40:29,399] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:40:29,404] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:41:29,478] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:41:29,554] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:41:29,559] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:42:29,626] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:42:29,674] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:42:29,679] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:43:29,757] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:43:29,841] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:43:29,849] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:44:29,936] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:44:30,038] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:44:30,050] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:45:30,126] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:45:30,180] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:45:30,190] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:46:30,261] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:46:30,320] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:46:30,330] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:47:30,408] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:47:30,461] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:47:30,467] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:48:30,537] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:48:30,583] {sql.py:98} INFO - Poking: select case when q = 'true' then 1 else 0 end as q from  (
	select case when count(id)=0 then 'true' else 'false' end as q
	from list_flow_log
	where object_flow = 0 and status = 1
) t1; (with parameters None)
[2022-04-24 22:48:30,588] {base.py:79} INFO - Using connection to: id: postgres_default. Host: postgres, Port: 5432, Schema: ***, Login: ***, Password: ***, extra: {}
[2022-04-24 22:48:32,411] {base_job.py:231} ERROR - LocalTaskJob heartbeat got an exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/impl.py", line 241, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: connection to server at "postgres" (172.22.0.6), port 5432 failed: Connection refused
	Is the server running on that host and accepting TCP/IP connections?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/jobs/base_job.py", line 203, in heartbeat
    session.merge(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2171, in merge
    _resolve_conflict_map=_resolve_conflict_map,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2244, in _merge
    merged = self.query(mapper.class_).get(key[1])
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 1018, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 1135, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/loading.py", line 286, in load_on_pk_identity
    return q.one()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3557, in _execute_and_instances
    querycontext, self._connection_from_session, close_with_result=True
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3572, in _get_bind_args
    mapper=self._bind_mapper(), clause=querycontext.statement, **kw
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1145, in connection
    execution_options=execution_options,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1151, in _connection_for_bind
    engine, execution_options
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2340, in _wrap_pool_connect
    e, dialect, self
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1584, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/impl.py", line 241, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "postgres" (172.22.0.6), port 5432 failed: Connection refused
	Is the server running on that host and accepting TCP/IP connections?

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2022-04-24 22:48:39,362] {base_job.py:231} ERROR - LocalTaskJob heartbeat got an exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/impl.py", line 241, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not translate host name "postgres" to address: Temporary failure in name resolution


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/jobs/base_job.py", line 203, in heartbeat
    session.merge(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2171, in merge
    _resolve_conflict_map=_resolve_conflict_map,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2244, in _merge
    merged = self.query(mapper.class_).get(key[1])
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 1018, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 1135, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/loading.py", line 286, in load_on_pk_identity
    return q.one()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3557, in _execute_and_instances
    querycontext, self._connection_from_session, close_with_result=True
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3572, in _get_bind_args
    mapper=self._bind_mapper(), clause=querycontext.statement, **kw
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1145, in connection
    execution_options=execution_options,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1151, in _connection_for_bind
    engine, execution_options
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2340, in _wrap_pool_connect
    e, dialect, self
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1584, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/impl.py", line 241, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.7/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not translate host name "postgres" to address: Temporary failure in name resolution

(Background on this error at: http://sqlalche.me/e/13/e3q8)
